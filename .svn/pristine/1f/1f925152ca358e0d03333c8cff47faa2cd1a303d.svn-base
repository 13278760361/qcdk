<?php
namespace Admin\Controller;
use Common\Controller\ABaseController;

class PrizeController extends ABaseController
{
	
	public function _initialize(){
        parent::_initialize();
        $this->db = M('Users'); //当前模块数据库
        $this->assign('departs', M('Depart')->where(array('status'=>1))->getField('id,depart_name'));
    
    }
    public function index(){
         //查询条件匹配
        $keyword = I('get.keyword')?I('get.keyword'):'';
        $sceneid = I('get.id');
        $where =1;
        if ($keyword) {
            $where ="prize_name like '%{$keyword}%'";
        }
        if(!empty($sceneid)){
        	$where.=" AND s.id=p.scene_id AND s.id=${sceneid}";
        }
        $prize = M('Prize');
        $count          =  $prize->table(array('qcdk_prize'=>'p','qcdk_scene'=>'s'))->where($where)->count();
        $page           = new \Think\Page($count,C('pageNum'));
        $show           = $page->show();
        
        $prizeList = M('Prize')->field('p.id,p.scene_id,p.prize_name,p.type,p.money,p.num,p.pic,p.prob,p.status,s.scene_name')->table(array('qcdk_prize'=>'p','qcdk_scene'=>'s'))->where($where) ->limit($page->firstRow.','.$page->listRows)->select();
        if(!empty($prizeList)){
               foreach($prizeList as $k=>$v){
                    if (!empty($v['pic'])) {
                       $prizeList[$k]['pic'] = "/Uploads/prize/".$v['pic'];
                    }else{
                        $prizeList[$k]['pic'] = "/Uploads/prize/default.jpg";
                    }
                    
               } 
        }
        
        $this->assign('keyword',$keyword);
        $this->assign('sc_id',I('get.id'));
        $this->assign('page',$show);
        $this->assign('lists',$prizeList);
        $this->display();

        //  $lists =  $prize      
        
        // ->limit($page->firstRow.','.$page->listRows)
        // ->where($where)
        // ->order('id DESC')
        // ->select();
        // $this->assign('keyword',$keyword);
        // $this->assign('page',$show);
        // $this->assign('lists',$lists);
        // $this->display();
    }
    //添加奖品
    public function add(){

    	$scene = M('Scene');
    	if (IS_POST) {
    		# code...
    		$data['scene_id'] = I('post.scene_id');
    		$data['prize_name'] = I('post.prize_name');
    		$data['prob'] = I('post.prob');
    		$data['num'] = I('post.num');
    		$data['type'] = I('post.type_id');
    		$data['money'] = I('post.money');
    		$data['status'] = I('post.status');
            $data['pic'] = explode('/',I('post.prize_pic'))[3];
    		$re = M('Prize')->add($data);
    		if($re){
    			$this->success('添加成功!');
    		}else{
				$this->error('添加失败!');
    		}
    	}else{
    		//print_r(I('get.s_id'));exit;
    		$info = $scene->where(array('id'=>$_GET['id']))->find();
    		$this->assign('info',$info);
    		$this->assign('type',array('红包','拼图','假期'));
    		$this->assign('ids',I('get.id'));
    		$this->display();
    	}
    }
    //修改奖品
    public function edit(){
        if(IS_POST){
           $data['scene_id'] = I('post.scene_id');
            $data['prize_name'] = I('post.prize_name');
            $data['prob'] = I('post.prob');
            $data['num'] = I('post.num');
            $data['type'] = I('post.type_id');
            $data['money'] = I('post.money');
            $data['status'] = I('post.status');
            $data['pic'] = explode('/',I('post.prize_pic'))[3];
            // if(M('Prize')->where(array('prize_name'=>$data['prize_name']))){
            //     $this->error('奖品名称已存在，请重新操作');
            // }
            $where['id'] = I('post.id');;
           $re = M('Prize')->where($where)->save($data);
           if($re){
               $this->success('修改成功!');
           } else {
               $this->error('修改失败,请重试');
           }
       }else{
           $where['id'] = I('get.id');
           $info = M('Prize')->where($where)->find();
        if(!empty($info['pic'])){
            $info['pic'] = "/Uploads/prize/".$info['pic'];
        }else{
            $info['pic'] = "/Uploads/prize/default.jpg";
        }
        
           $this->assign('type',array('红包','拼图','假期'));
           $this->assign('sceneList',M('Scene')->where(array('status'=>1))->select());
           $this->assign('info',$info);
           $this->display();
       }
    }
    //删除奖品
    public function del(){
        $ids = I('post.ids');
        $map['id']=['in',$ids];
        //$map1['scene_id']=['in',$ids];
        M('Prize')->startTrans();//开始事务
        $re = M('Prize')->where($map)->delete();
        
        if($re){
            M('Prize')->commit();
            $this->success('删除成功');
        } else {
            M('Prize')->rollback();
            $this->error('删除失败,请重试!');
        }
    }
    public function red_index(){
         //查询条件匹配
        $keyword = I('get.keyword')?I('get.keyword'):'';

        $where =1;
         if ($keyword) {
            $where ="scene_name like '%{$keyword}%'";
        }
        $redenvel = M('Scene');
        $count          =  $redenvel->where($where)->count();
        $page           = new \Think\Page($count,C('pageNum'));
        $show           = $page->show();

         $lists =  $redenvel      
        ->limit($page->firstRow.','.$page->listRows)
        ->where($where)
        ->order('id ASC')
        ->select();
        $this->assign('keyword',$keyword);
        $this->assign('page',$show);
        $this->assign('lists',$lists);
        $this->display();
    }
    public function red_add(){
        $scene = M('Scene');
        if(IS_POST){
           $data['scene_name'] = I('post.scene_name');
          
           $data['status'] = I('post.status');
           $data['time'] = $data['update_time'] =time();
           $re = $scene->add($data);
            if($re){
                $this->success('添加成功!');
            } else {
                $this->error('添加失败!');
            }
        }else{
            $this->display();
        }
    }
    //删除场景
    public function red_del(){
        $ids = I('post.ids');
        $map['id']=['in',$ids];
        $map1['scene_id']=['in',$ids];
        M('Scene')->startTrans();
        $re = M('Scene')->where($map)->delete();
        $re_1 = M('Prize')->where($map1)->count();
        if($re && empty($re_1)){
            M('Scene')->commit();
            $this->success('删除成功');
        }elseif($re_1){
            M('Scene')->rollback();
            $this->success('场景下面有奖品,请先删除奖品');
        } else {
            M('Scene')->rollback();
            $this->error('删除失败,请重试!');
        }
    }
    //场景修改
    public function red_edit(){
        if(IS_POST){
           $data['scene_name'] = I('post.scene_name');
          // $data['orders'] = I('post.order');
           $data['status'] = I('post.status');
           $data['time'] = time();
           $where['id'] = I('post.id');
           $re = M('Scene')->where($where)->save($data);
           if($re){
               $this->success('修改成功!');
           } else {
               $this->error('修改失败,请重试');
           }
       }else{
           $where['id'] = I('get.id');
           $info = M('Scene')->where($where)->find();
           $this->assign('info',$info);
           $this->display();
       }
    }
}
?>